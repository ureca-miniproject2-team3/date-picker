<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mycom.myapp.events.dao.EventDao">

	<!-- EventSummaryDto용 ResultMap 정의 -->
	<resultMap id="eventSummaryMap" type="com.mycom.myapp.events.dto.EventSummaryDto">
	    <id property="eventId" column="event_id"/>
	    <result property="title" column="title"/>
	    <result property="status" column="status" javaType="com.mycom.myapp.events.dto.type.EventStatus" />
	
	    <association property="timeline" javaType="com.mycom.myapp.events.dto.TimelineDto"
	    		notNullColumn="timeline_id">
	        <id property="timelineId" column="timeline_id"/>
	        <result property="eventId" column="event_id"/>
	        <result property="startTime" column="start_time"/>
	        <result property="endTime" column="end_time"/>
	    </association>
	</resultMap>
	
	<!--사용자 참여 중 이벤트 조회 (리스트)-->
	<select id="listEvent" resultMap="eventSummaryMap">
	    select
	        e.id as event_id, 
	        e.title, 
	        e.code,
	        t.id as timeline_id, 
	        t.start_time, 
	        t.end_time
	    from event e 
	    join user_event u on u.event_id = e.id
	    left join timeline t on t.event_id = e.id
	    where u.user_id = #{userId}
	</select>

    <!--사용자 참여 중 참여자 명 조회 (리스트)-->
    <select id="findUserNamesByEventId" resultType="string">
        SELECT u.name
        FROM `user` u
                 JOIN user_event ue ON u.id = ue.user_id
        WHERE ue.event_id = #{eventId}
    </select>

    <!-- EventDto용 ResultMap 정의 -->
	<resultMap id="eventDetailMap" type="com.mycom.myapp.events.dto.EventDto">
	    <id property="eventId" column="event_id"/>
	    <result property="title" column="title"/>
	    <result property="ownerId" column="owner_id"/>
	    <result property="code" column="code"/>
	    
	    <association property="timeline" javaType="com.mycom.myapp.events.dto.TimelineDto">
	        <id property="timelineId" column="timeline_id"/>
	        <result property="eventId" column="event_id"/>
	        <result property="startTime" column="start_time"/>
	        <result property="endTime" column="end_time"/>
	    </association>
	</resultMap>
	
    <!--이벤트 상세 정보 조회-->
    <select id="detailEvent" resultMap="eventDetailMap">
        select
            e.id as event_id,
            e.title,
            e.owner_id,
            e.code,
            t.id as timeline_id,
            t.start_time,
            t.end_time
        from event e
        left join timeline t on t.event_id = e.id
        where e.id = #{eventId}
    </select>

    <!--이벤트 참여자 userId 목록 조회-->
    <select id="findUserIdsByEventId" resultType="long">
        select user_id
        from user_event
        where event_id = #{eventId}
    </select>

    <!--event_date 등록된 날짜 조회-->
    <select id="findEventDatesByEventId" resultType="java.time.LocalDate">
        select event_date as eventDate
        from event_date
        where event_id = #{eventId}
    </select>

    <!--event 추가-->
    <!--
    useGeneratedKeys="true": DB 에서 생성된 PK 값을 반환받는다.
    keyProperty="eventId": 반환된 PK 값을 Java 객체의 eventId 필드에 매핑한다.
    -->
    <insert id="insertEvent" useGeneratedKeys="true" keyProperty="eventId" parameterType="com.mycom.myapp.events.dto.EventDto">
        insert into event (title, owner_id)
        values (#{title}, #{ownerId})
    </insert>

    <!--event_date 추가-->
    <insert id="insertEventDate">
        insert into event_date (event_id, event_date)
        values (#{eventId}, #{eventDate})
    </insert>

    <!--user_event 추가-->
    <insert id="insertUserEvent">
        insert into user_event (user_id, event_id)
        values (#{userId}, #{eventId})
    </insert>

    <!--event 수정-->
    <update id="updateEventTitle" parameterType="com.mycom.myapp.events.dto.EventDto">
        update event
        set title = #{title}
        where id = #{eventId}
    </update>

    <!--event 삭제-->
    <delete id="deleteEvent">
        delete
        from event
        where id = #{eventId}
    </delete>

    <!--event_date 삭제-->
    <delete id="deleteEventDate">
        delete
        from event_date
        where event_id = #{eventId}
    </delete>

    <!--user_event 삭제-->
    <delete id="deleteUserEvent">
        delete
        from user_event
        where event_id = #{eventId}
    </delete>

    <!--timeline 삭제-->
	<delete id="deleteTimeline">
		delete
		from timeline
		where event_id = #{eventId}
	</delete>

    <!--이벤트에 참여 중인 유저 id 리스트-->
    <select id="getParticipantsByEventId">
        select user_id as userId
        from user_event
        where event_id = #{eventId}
    </select>

    <!--확정된 이벤트 Status 변경-->
    <update id="checkEvent">
    	update event
    	set code = '002'
    	where id = #{eventId}
    </update>

    <!--확정된 이벤트 타임라인 추가-->
    <insert id="insertTimeline" useGeneratedKeys="true" keyProperty="timelineId" parameterType="com.mycom.myapp.events.dto.TimelineDto">
    	insert into timeline(event_id, start_time, end_time)
    	values (#{eventId}, #{startTime}, #{endTime})
    </insert>

    <!--이벤트 상태 수정-->
    <update id="completedCheckedEvents">
        update event as e, timeline as t
        set e.code = '003'
        where e.code = '002'
          and e.id = t.event_id
          and t.end_time &lt; NOW()
    </update>

    <update id="expiredUncheckedEvents">
        update event as e
        set e.code = '004'
        where e.code = '001'
          and e.id in (
            select ed.event_id
            from event_date as ed
            group by ed.event_id
            having max(ed.event_date) &lt; curdate()
        )
    </update>

    <update id="markAsSent">
        update user_event
        set is_sent = 1
        where user_id = #{userId}
          and event_id = #{eventId}
    </update>
    
    <!--is_sent = false (알림 미수신)인 user_event 조회-->
    <select id="listUnsentUserEvent" resultType="com.mycom.myapp.notifications.dto.UserEventDto">
    	select user_id as userId, event_id as eventId, is_sent as isSent
    	from user_event
    	where is_sent = 0
    	  and user_id = #{userId}
    </select>
    
    <!--is_sent = false인 user_event를 -->
    <update id="updateUnsentUserEvent">
    	update user_event
    	set is_sent = 1
    	where user_id = #{userId}
    	  and event_id = #{eventId}
    </update>
</mapper>
